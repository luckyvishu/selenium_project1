{"name": "test_patient_test", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoAlertPresentException: Message: no such alert\n  (Session info: chrome=134.0.6998.119)\nStacktrace:\n\tGetHandleVerifier [0x00007FF790F74C25+3179557]\n\t(No symbol) [0x00007FF790BD88A0]\n\t(No symbol) [0x00007FF790A68FFC]\n\t(No symbol) [0x00007FF790A587F4]\n\t(No symbol) [0x00007FF790A7FDA1]\n\t(No symbol) [0x00007FF790A90A57]\n\t(No symbol) [0x00007FF790AE7CDD]\n\t(No symbol) [0x00007FF790A908D5]\n\t(No symbol) [0x00007FF790AE7A03]\n\t(No symbol) [0x00007FF790AB06D0]\n\t(No symbol) [0x00007FF790AB1983]\n\tGetHandleVerifier [0x00007FF790FD67CD+3579853]\n\tGetHandleVerifier [0x00007FF790FED1D2+3672530]\n\tGetHandleVerifier [0x00007FF790FE2153+3627347]\n\tGetHandleVerifier [0x00007FF790D4092A+868650]\n\t(No symbol) [0x00007FF790BE2FFF]\n\t(No symbol) [0x00007FF790BDF4A4]\n\t(No symbol) [0x00007FF790BDF646]\n\t(No symbol) [0x00007FF790BCEAA9]\n\tBaseThreadInitThunk [0x00007FF82B7F259D+29]\n\tRtlUserThreadStart [0x00007FF82D56AF38+40]", "trace": "setup_teardown = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"91d91c174e74073262d4c7f0a27fbb6b\")>\n\n    def test_patient_test(setup_teardown):\n        hp=home_page(setup_teardown)\n        lp=Loginpatient(setup_teardown)\n        hp.click_logins_button()\n        hp.click_patient_loginbutton()\n        allwindow = lp.driver.window_handles\n        lp.driver.switch_to.window(allwindow[1])\n        sleep(1)\n        lp.Create_Link()\n        cp=create_patient(setup_teardown)\n        pei=get_date(setup_teardown)\n        patdet=pei.get_data_from_excel(3,0,6)\n        patent_email_id=patdet[4]\n        run_time_email_id=patent_email_id.replace(\"@\",(str(pei.gen_random_number())+\"@\"))\n>       cp.Create_patient(patdet[0],patdet[1],patdet[2],patdet[3],run_time_email_id,patdet[5],patdet[5])\n\ntestdata\\patienttest\\test_patientAppointmenttest.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nobjectrepository\\UserregistrationPage.py:33: in Create_patient\n    self.driver.switch_to.alert.accept()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\switch_to.py:58: in alert\n    _ = alert.text\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\alert.py:58: in text\n    return self.driver.execute(Command.W3C_GET_ALERT_TEXT)[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E1C53E1730>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such alert\",\"message\":\"no such alert\\\\n  (Session info: chrome=134.0.6...07FF790BCEAA9]\\\\n\\\\tBaseThreadInitThunk [0x00007FF82B7F259D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF82D56AF38+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoAlertPresentException: Message: no such alert\nE         (Session info: chrome=134.0.6998.119)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF790F74C25+3179557]\nE       \t(No symbol) [0x00007FF790BD88A0]\nE       \t(No symbol) [0x00007FF790A68FFC]\nE       \t(No symbol) [0x00007FF790A587F4]\nE       \t(No symbol) [0x00007FF790A7FDA1]\nE       \t(No symbol) [0x00007FF790A90A57]\nE       \t(No symbol) [0x00007FF790AE7CDD]\nE       \t(No symbol) [0x00007FF790A908D5]\nE       \t(No symbol) [0x00007FF790AE7A03]\nE       \t(No symbol) [0x00007FF790AB06D0]\nE       \t(No symbol) [0x00007FF790AB1983]\nE       \tGetHandleVerifier [0x00007FF790FD67CD+3579853]\nE       \tGetHandleVerifier [0x00007FF790FED1D2+3672530]\nE       \tGetHandleVerifier [0x00007FF790FE2153+3627347]\nE       \tGetHandleVerifier [0x00007FF790D4092A+868650]\nE       \t(No symbol) [0x00007FF790BE2FFF]\nE       \t(No symbol) [0x00007FF790BDF4A4]\nE       \t(No symbol) [0x00007FF790BDF646]\nE       \t(No symbol) [0x00007FF790BCEAA9]\nE       \tBaseThreadInitThunk [0x00007FF82B7F259D+29]\nE       \tRtlUserThreadStart [0x00007FF82D56AF38+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoAlertPresentException"}, "start": 1742993970044, "stop": 1742993978291, "uuid": "5527af60-f19f-4e26-8976-f7ad51bcd09d", "historyId": "6b5e27bf86f3bcf371b7f1550fc8b6ae", "testCaseId": "6b5e27bf86f3bcf371b7f1550fc8b6ae", "fullName": "testdata.patienttest.test_patientAppointmenttest#test_patient_test", "labels": [{"name": "parentSuite", "value": "testdata.patienttest"}, {"name": "suite", "value": "test_patientAppointmenttest"}, {"name": "host", "value": "DESKTOP-KT46ULE"}, {"name": "thread", "value": "22716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testdata.patienttest.test_patientAppointmenttest"}]}